# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MCWindowComparison.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import matplotlib.pyplot as plt
import numpy as np
import SimpleITK as sitk
from PIL import Image
import nibabel as nib
from nibabel import nifti1
from nibabel.viewers import OrthoSlicer3D
import itk

import os
from pathlib import Path
import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPixmap, QImage
from PySide2.QtWidgets import QApplication, QWidget, QLineEdit, QLabel, QPushButton, QScrollBar, QMessageBox, QDialog, QFileDialog
from PySide2.QtCore import QFile, QRect, QCoreApplication, Qt, QPoint, QRectF
from PySide2.QtUiTools import QUiLoader

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(659, 620)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.corScroll = QtWidgets.QScrollBar(self.centralwidget)
        self.corScroll.setGeometry(QtCore.QRect(470, 330, 20, 241))
        self.corScroll.setOrientation(QtCore.Qt.Vertical)
        self.corScroll.setObjectName("corScroll")
        self.axialScroll = QtWidgets.QScrollBar(self.centralwidget)
        self.axialScroll.setGeometry(QtCore.QRect(310, 30, 16, 271))
        self.axialScroll.setOrientation(QtCore.Qt.Vertical)
        self.axialScroll.setObjectName("axialScroll")
        self.sagittalPlane = QtWidgets.QLabel(self.centralwidget)
        self.sagittalPlane.setGeometry(QtCore.QRect(330, 30, 281, 271))
        self.sagittalPlane.setFrameShape(QtWidgets.QFrame.Box)
        self.sagittalPlane.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.sagittalPlane.setText("")
        self.sagittalPlane.setObjectName("sagittalPlane")
        self.label2 = QtWidgets.QLabel(self.centralwidget)
        self.label2.setGeometry(QtCore.QRect(300, 10, 331, 16))
        self.label2.setAlignment(QtCore.Qt.AlignCenter)
        self.label2.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.label2.setObjectName("label2")
        self.label1 = QtWidgets.QLabel(self.centralwidget)
        self.label1.setGeometry(QtCore.QRect(-10, 10, 331, 16))
        self.label1.setAlignment(QtCore.Qt.AlignCenter)
        self.label1.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.label1.setObjectName("label1")
        self.sagScroll = QtWidgets.QScrollBar(self.centralwidget)
        self.sagScroll.setGeometry(QtCore.QRect(620, 30, 16, 271))
        self.sagScroll.setOrientation(QtCore.Qt.Vertical)
        self.sagScroll.setObjectName("sagScroll")
        self.coronalPlane = QtWidgets.QLabel(self.centralwidget)
        self.coronalPlane.setGeometry(QtCore.QRect(170, 330, 291, 241))
        self.coronalPlane.setFrameShape(QtWidgets.QFrame.Box)
        self.coronalPlane.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.coronalPlane.setText("")
        self.coronalPlane.setObjectName("coronalPlane")
        self.label3 = QtWidgets.QLabel(self.centralwidget)
        self.label3.setGeometry(QtCore.QRect(160, 310, 331, 16))
        self.label3.setAlignment(QtCore.Qt.AlignCenter)
        self.label3.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.label3.setObjectName("label3")
        self.axialPlane = QtWidgets.QLabel(self.centralwidget)
        self.axialPlane.setGeometry(QtCore.QRect(30, 30, 281, 271))
        self.axialPlane.setFrameShape(QtWidgets.QFrame.Box)
        self.axialPlane.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.axialPlane.setText("")
        self.axialPlane.setObjectName("axialPlane")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 659, 22))
        self.menubar.setObjectName("menubar")
        self.menuMotion_Corrected_Image = QtWidgets.QMenu(self.menubar)
        self.menuMotion_Corrected_Image.setObjectName("menuMotion_Corrected_Image")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuMotion_Corrected_Image.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.openInitialImageSlices()

        self.axialScroll.valueChanged.connect(self.changeAxialSlices)
        self.sagScroll.valueChanged.connect(self.changeSagSlices)
        self.corScroll.valueChanged.connect(self.changeCorSlices)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label2.setText(_translate("MainWindow", "Sagittal Plane"))
        self.label1.setText(_translate("MainWindow", "Axial Plane"))
        self.label3.setText(_translate("MainWindow", "Coronal Plane"))
        self.menuMotion_Corrected_Image.setTitle(_translate("MainWindow", "Motion Corrected Image"))

    def openInitialImageSlices(self):
        fname = QFileDialog.getOpenFileName(None, 'Select Motion Corrected File')
        nib_img = nib.load(fname[0], mmap=False)
        self.data_nib_img = nib_img.get_fdata()
        self.data_nib_img = self.data_nib_img.astype(np.uint8)

        self.data3D_img = self.data_nib_img[:,:,:]
        self.x,self.y,self.z = self.data3D_img.shape
        self.x = self.x-1
        self.y = self.y-1
        self.z = self.z-1

        self.axialScroll.setMaximum(self.z)
        self.sagScroll.setMaximum(self.x)
        self.corScroll.setMaximum(self.y)

        self.axialScroll.setValue(0)
        self.sagScroll.setValue(0)
        self.corScroll.setValue(0)

        self.data2D_initial_axial = self.data3D_img[:,:,0]
        self.data2D_initial_axial = np.flipud(self.data2D_initial_axial) #flipud
        self.data2D_initial_axial = np.rot90(self.data2D_initial_axial,3) #rotate ccw 90
        self.data2D_initial_axial = np.require(self.data2D_initial_axial,np.uint8, 'C')
        self.data2D_initial_sag = self.data3D_img[0,:,:]
        self.data2D_initial_sag = np.flipud(self.data2D_initial_sag) #flipud
        self.data2D_initial_sag = np.rot90(self.data2D_initial_sag,2) #rotate ccw 90
        self.data2D_initial_sag = np.require(self.data2D_initial_sag,np.uint8,'C')
        self.data2D_initial_cor = self.data3D_img[:,0,:]
        self.data2D_initial_cor = np.flipud(self.data2D_initial_cor) #flipud
        self.data2D_initial_cor = np.rot90(self.data2D_initial_cor,1) #rotate ccw 90
        self.data2D_initial_cor = np.require(self.data2D_initial_cor,np.uint8,'C')

        self.h_ax, self.w_ax = self.data2D_initial_axial.shape
        self.h_sag, self.w_sag = self.data2D_initial_sag.shape
        self.h_cor, self.w_cor = self.data2D_initial_cor.shape

        bytes_line_ax, _ = self.data2D_initial_axial.strides
        bytes_line_sag, _ = self.data2D_initial_sag.strides
        bytes_line_cor, _ = self.data2D_initial_cor.strides

        self.q_img_ax = QImage(self.data2D_initial_axial, self.w_ax, self.h_ax, bytes_line_ax, QImage.Format_Grayscale8)
        self.q_img_sag = QImage(self.data2D_initial_sag, self.w_sag, self.h_sag, bytes_line_sag, QImage.Format_Grayscale8)
        self.q_img_cor = QImage(self.data2D_initial_cor, self.w_cor, self.h_cor, bytes_line_cor, QImage.Format_Grayscale8)

        self.pixmap_ax = QPixmap.fromImage(self.q_img_ax).scaled(331,311) #changed to self. to be able to draw on top of
        self.pixmap_sag = QPixmap.fromImage(self.q_img_sag).scaled(331,311)
        self.pixmap_cor = QPixmap.fromImage(self.q_img_cor).scaled(331,311)

        self.axialPlane.setPixmap(self.pixmap_ax)
        self.sagittalPlane.setPixmap(self.pixmap_sag)
        self.coronalPlane.setPixmap(self.pixmap_cor)

    def changeAxialSlices(self):
        if self.axialScroll.value() != 0:
            self.new_z_val = self.axialScroll.value()
            #print(new_z_val)

            self.data2D_axial = self.data3D_img[:,:,self.new_z_val]
            self.data2D_axial = np.flipud(self.data2D_axial) #flipud
            self.data2D_axial = np.rot90(self.data2D_axial,3) #rotate
            self.data2D_axial = np.require(self.data2D_axial,np.uint8,'C')

            bytes_line_ax, _ = self.data2D_axial.strides
            self.q_img_ax_slices = QImage(self.data2D_axial,self.w_ax, self.h_ax, bytes_line_ax, QImage.Format_Grayscale8)
            self.axialPlane.setPixmap(QPixmap.fromImage(self.q_img_ax_slices).scaled(331,311))
        elif self.axialScroll.value() == 0:
            self.axialPlane.setPixmap(QPixmap.fromImage(self.q_img_ax).scaled(331,311))

    def changeSagSlices(self):
        if self.sagScroll.value() != 0:
            self.new_x_val = self.sagScroll.value()

            self.data2D_sag = self.data3D_img[self.new_x_val,:,:]
            self.data2D_sag = np.flipud(self.data2D_sag) #flipud
            self.data2D_sag = np.rot90(self.data2D_sag,2) #rotate
            self.data2D_sag = np.require(self.data2D_sag,np.uint8,'C')

            bytes_line_sag, _ = self.data2D_sag.strides
            self.q_img_sag_slices= QImage(self.data2D_sag,self.w_sag, self.h_sag, bytes_line_sag, QImage.Format_Grayscale8)
            self.sagittalPlane.setPixmap(QPixmap.fromImage(self.q_img_sag_slices).scaled(331,311))
        elif self.sagScroll.value() ==0:
            self.sagittalPlane.setPixmap(QPixmap.fromImage(self.q_img_sag).scaled(331,311))

    def changeCorSlices(self):
        if self.corScroll.value() != 0:
            self.new_y_val = self.corScroll.value()

            self.data2D_cor = self.data3D_img[:,self.new_y_val,:]
            self.data2D_cor = np.flipud(self.data2D_cor) #flipud
            self.data2D_cor = np.rot90(self.data2D_cor,1) #rotate
            self.data2D_cor = np.require(self.data2D_cor, np.uint8,'C')

            bytes_line_cor, _ = self.data2D_cor.strides
            self.q_img_cor_slices = QImage(self.data2D_cor,self.w_cor,self.h_cor, bytes_line_cor, QImage.Format_Grayscale8)
            self.coronalPlane.setPixmap(QPixmap.fromImage(self.q_img_cor_slices).scaled(331,311))
        elif self.corScroll.value() ==0:
            self.coronalPlane.setPixmap(QPixmap.fromImage(self.q_img_cor).scaled(331,311))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
